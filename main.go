package main

import (
	"encoding/json"
	"fmt"
	"log"
	"net/http"
	"os"

	"github.com/joho/godotenv"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è OpenWeatherMap
const (
	weatherAPIURL = "http://api.openweathermap.org/data/2.5/weather"
)

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
func getWeather(city string) string {
	//–ü–æ–ª—É—á–∞–µ–º API-–∫–ª—é—á –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
	weatherAPIKey := os.Getenv("WAK")
	if weatherAPIKey == "" {
		log.Println("API-–∫–ª—é—á –¥–ª—è OpenWeatherMap –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –∑–∞–¥–∞–Ω –≤ —Ñ–∞–π–ª–µ .env")
		return "–û—à–∏–±–∫–∞: API-–∫–ª—é—á –¥–ª—è OpenWeatherMap –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."
	}
	// –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
	url := fmt.Sprintf("%s?q=%s&appid=%s&units=metric&lang=ru", weatherAPIURL, city, weatherAPIKey)

	// –î–µ–ª–∞–µ–º HTTP-–∑–∞–ø—Ä–æ—Å
	resp, err := http.Get(url)
	if err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã: %v", err)
		return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ."
	}
	defer resp.Body.Close()

	// –†–∞—Å–ø–∞—Ä—Å–∏–º JSON-–æ—Ç–≤–µ—Ç
	var data map[string]interface{}
	if err := json.NewDecoder(resp.Body).Decode(&data); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –æ—Ç–≤–µ—Ç–∞: %v", err)
		return "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ."
	}

	// –î–æ—Å—Ç–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ
	main, ok := data["main"].(map[string]interface{})
	if !ok {
		return "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ."
	}

	weather, ok := data["weather"].([]interface{})
	if !ok || len(weather) == 0 {
		return "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã."
	}

	description := weather[0].(map[string]interface{})["description"].(string)
	temp := main["temp"].(float64)

	return fmt.Sprintf("–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ %s: %s, %.1f¬∞C", city, description, temp)
}

func main() {
	// –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
	err := godotenv.Load()
	if err != nil {
		log.Fatal("Error to loading .env fail")
	}
	botToken := os.Getenv("TBT") // –∏–ª–∏ –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏

	bot, err := tgbotapi.NewBotAPI(botToken)
	if err != nil {
		log.Panic(err)
	}

	// –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
	bot.Debug = true
	log.Printf("–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫ %s", bot.Self.UserName)

	// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := bot.GetUpdatesChan(u)

	// –ì–æ—Ä–æ–¥–∞
	cityA := "–ú–æ—Å–∫–≤–∞"
	cityB := "–ü—É—à–∫–∏–Ω–æ"
	cityC := "–î–æ–Ω–µ—Ü–∫"

	for update := range updates {
		// –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–π
		if update.Message == nil {
			continue
		}

		// –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
		log.Printf("[%s] %s", update.Message.From.UserName, update.Message.Text)

		// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
		buttons := tgbotapi.NewReplyKeyboard(
			tgbotapi.NewKeyboardButtonRow(
				tgbotapi.NewKeyboardButton(cityA),
				tgbotapi.NewKeyboardButton(cityB),
				tgbotapi.NewKeyboardButton(cityC),
			),
		)

		// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É /start
		if update.Message.Text == "/start" {
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã:")
			msg.ReplyMarkup = buttons
			bot.Send(msg)
			continue
		}

		// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
		if update.Message.Text == cityA {
			customMessage := "–ú–æ—Å–∫–≤–∞ –∂–¥—ë—Ç –≤–∞—Å —Å —Ä–∞—Å–ø—Ä–æ—Å—Ç—ë—Ä—Ç—ã–º–∏ –æ–±—ä—è—Ç–∏—è–º–∏! üèôÔ∏è"
			weather := getWeather(cityA)
			finalText := fmt.Sprintf("%s\n\n%s", weather, customMessage)
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, finalText)
			bot.Send(msg)
		} else if update.Message.Text == cityB {
			customMessage := "–ü—É—à–∫–∏–Ω–æ - –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π —É–≥–æ–ª–æ–∫, –Ω–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π —É—é—Ç–æ–º ‚ù§Ô∏è"
			weather := getWeather(cityB)
			finalText := fmt.Sprintf("%s\n\n%s", weather, customMessage)
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, finalText)
			bot.Send(msg)
		} else if update.Message.Text == cityC {
			customMessage := "–í –î–æ–Ω–µ—Ü–∫–µ —Å–æ–ª–Ω–µ—á–Ω–æ –∏ —Ç–µ–ø–ª–æ –≤ —Å–µ—Ä–¥—Ü–µ üåû"
			weather := getWeather(cityC)
			finalText := fmt.Sprintf("%s\n\n%s", weather, customMessage)
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, finalText)
			bot.Send(msg)
		}

	}
}
